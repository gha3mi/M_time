#@(#) Makefile started by makeout(1) 2019-12-13 15:27:55
# generated by:   ...

NULL=
PROGFILES = \
   ../example/box_month.f90 \
   ../example/d2j.f90 \
   ../example/d2o.f90 \
   ../example/d2u.f90 \
   ../example/d2w.f90 \
   ../example/date_to_julian.f90 \
   ../example/date_to_unix.f90 \
   ../example/days2sec.f90 \
   ../example/dow.f90 \
   ../example/easter.f90 \
   ../example/fmtdate.f90 \
   ../example/fmtdate_usage.f90 \
   ../example/guessdate.f90 \
   ../example/j2d.f90 \
   ../example/julian_to_date.f90 \
   ../example/mo2d.f90 \
   ../example/mo2v.f90 \
   ../example/moon_fullness.f90 \
   ../example/now.f90 \
   ../example/o2d.f90 \
   ../example/ordinal_seconds.f90 \
   ../example/ordinal_to_date.f90 \
   ../example/phase_of_moon.f90 \
   ../example/sec2days.f90 \
   ../example/u2d.f90 \
   ../example/unix_to_date.f90  \
   ../example/v2mo.f90  \
   ../example/w2d.f90 \
   $(NULL)

TESTFILES = ../test/test_suite_M_time.f90
TEST = ${TESTFILES:.f90=}

CPROGFILES = 

PROG = ${PROGFILES:.f90=}

CPROG = ${CPROGFILES:.c=}

SRCS =  M_time.f90 M_time_oop.f90 M_time_duplicate.f90

OBJS =  M_time.o M_time_oop.o M_time_duplicate.o
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# platform-specific values you will probably change
# 
LIBS := 
CC := cc
CFLAGS := -O
FC := gfortran
FFLAGS := -O
LDFLAGS := 
# 
# You can either ignore it, or disable the "may be used uninitialized"
# warnings with -Wno-maybe-uninitialized or compile with optimizations
# (-O1 and more).
gfortran: F90=gfortran
gfortran: F90FLAGS := -g -O -Wall -std=f2018 -Wextra -Wno-maybe-uninitialized -Wno-uninitialized
gfortran: all
	@echo built with $(F90)

nvfortran: F90=nvfortran
nvfortran: F90FLAGS := -Minform=inform -Mbackslash -traceback
nvfortran: all
	@echo built with $(F90)

ifort: F90=ifort
ifort: F90FLAGS := -warn all -traceback
ifort: all
	@echo built with $(F90)

nagfor: F90=nagfor
nagfor: F90FLAGS := -C all
nagfor: all
	@echo built with $(F90)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
all: $(PROG) $(CPROG)
	@echo "That's all folks!"

$(PROG): $(OBJS)

	-$(F90) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS) # ||echo "ouch: $@.f90"

.PHONY: help
help:
	: make    '-- build M_time module'
	: run     '-- run manpage demo programs and test program'
	: test    '-- run test program (requires additional modules)'
	: man     '-- show all manpages as text'
	: clean   '-- clean directory of object files and executables'
	: doxygen '-- run doxygen(1) if you have it'
	: help    '-- display this text'

.PHONY: run
run: $(PROG)
	# run everything
	echo $? |xargs -n 1|xargs -iXX time XX

.PHONY: test
test: $(OBJS)
	# compile and load
	$(F90) $(LDFLAGS) $(TESTFILES) -o ${TESTFILES:.f90=} $(OBJS) $(LIBS)
	# run 
	${TESTFILES:.f90=}

.PHONY: doxygen
doxygen: 
	doxygen dox.in

.PHONY: clean
clean:
	rm -f $(PROG) $(CPROG) $(OBJS) *.mod $(TEST)

.PHONY: man
man:
	@mandb ../man 1>&2
	@env MANPATH=../man MANWIDTH=256 man -k .|col -b
	@env MANPATH=../man MANWIDTH=80  man --regex '.*'|col -b

.SUFFIXES: $(SUFFIXES) .f90 .F90

.f90.o:
	$(F90) $(F90FLAGS) -c $<

.F90.o:
	$(F90) $(F90FLAGS) -c $<

#=================================================================================
M_time_oop.o: M_time.o M_time_duplicate.o
M_time.o: M_time_duplicate.o 
#=================================================================================

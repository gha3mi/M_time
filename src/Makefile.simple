#@(#) Makefile started by makeout(1) 2019-12-13 15:27:55
# generated by:   ...

NULL=
PROGFILES =    ../example/demo_box_month.f90    ../example/demo_d2j.f90    ../example/demo_d2o.f90    ../example/demo_d2u.f90    ../example/demo_d2w.f90    ../example/demo_date_to_julian.f90    ../example/demo_date_to_unix.f90    ../example/demo_days2sec.f90    ../example/demo_dow.f90    ../example/demo_easter.f90    ../example/demo_fmtdate.f90    ../example/demo_fmtdate_usage.f90    ../example/demo_guessdate.f90    ../example/demo_j2d.f90    ../example/demo_julian_to_date.f90    ../example/demo_mo2d.f90    ../example/demo_mo2v.f90    ../example/demo_moon_fullness.f90    ../example/demo_now.f90    ../example/demo_o2d.f90    ../example/demo_ordinal_seconds.f90    ../example/demo_ordinal_to_date.f90    ../example/demo_phase_of_moon.f90    ../example/demo_sec2days.f90    ../example/demo_u2d.f90    ../example/demo_unix_to_date.f90     ../example/demo_v2mo.f90     ../example/demo_w2d.f90    $(NULL)

TESTFILES = ../test/test_suite_M_time.F90
TEST = ${TESTFILES:.F90=}

CPROGFILES =

PROG = ${PROGFILES:.f90=}

CPROG = ${CPROGFILES:.c=}

SRCS =  M_time.f90 M_time__oop.f90 M_time__duplicate.f90

OBJS =  M_time.o M_time__oop.o M_time__duplicate.o
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# platform-specific values you will probably change
#
LIBS :=
CC := cc
CFLAGS := -O
FC := gfortran
FFLAGS := -O
LDFLAGS :=
F90=gfortran
#
# You can either ignore it, or disable the "may be used uninitialized"
# warnings with -Wno-maybe-uninitialized or compile with optimizations
# (-O1 and more).
gfortran: F90=gfortran
gfortran: F90FLAGS := -g -O -Wall -std=f2018 -Wextra -Wno-maybe-uninitialized -Wno-uninitialized
gfortran: all
        @echo built with $(F90)

nvfortran: F90=nvfortran
nvfortran: F90FLAGS := -Minform=inform -Mbackslash -traceback
nvfortran: all
        @echo built with $(F90)

ifort: F90=ifort
ifort: F90FLAGS := -warn all -traceback
ifort: all
        @echo built with $(F90)

nagfor: F90=nagfor
nagfor: F90FLAGS := -C all
nagfor: all
        @echo built with $(F90)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
all: $(PROG) $(CPROG)
        @echo "That's all folks!"

$(PROG): $(OBJS)

        -$(F90) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS) 

.PHONY: help
help:
        : make    '-- build M_time module'
        : run     '-- run manpage demo programs and test program'
        : test    '-- run test program (requires additional modules)'
        : man     '-- show all manpages as text'
        : clean   '-- clean directory of object files and executables'
        : doxygen '-- run doxygen(1) if you have it'
        : ford    '-- run ford(1) if you have it'
        : help    '-- display this text'

.PHONY: run
run: $(PROG)
        # run everything
        echo $? |xargs -n 1|xargs -iXX time XX

.PHONY: test
test: $(OBJS)
        # compile and load
        $(F90) $(LDFLAGS) $(TESTFILES) -o ${TESTFILES:.F90=} $(OBJS) $(LIBS)
        # run
        ${TESTFILES:.F90=}

.PHONY: doxygen
doxygen:
        doxygen dox.in
.PHONY: ford
ford:
        cd ..;ford ford.md

.PHONY: clean
clean:
        rm -f $(PROG) $(CPROG) $(OBJS) *.mod $(TEST)

.PHONY: man
man:
        @mandb ../man 1>&2
        @env MANPATH=../man MANWIDTH=256 man -k .|col -b
        @env MANPATH=../man MANWIDTH=80  man -Tutf8 --regex '.*'|col -b

.SUFFIXES: $(SUFFIXES) .f90 .F90

.f90.o:
        $(F90) $(F90FLAGS) -c $<

.F90.o:
        $(F90) $(F90FLAGS) -c $<

#=================================================================================
M_time__oop.o: M_time.o M_time__duplicate.o
M_time.o: M_time__duplicate.o
#=================================================================================
